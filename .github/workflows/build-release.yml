name: Build and Release

on:
  workflow_dispatch:
    inputs:
      beta:
        type: boolean
        description: Is beta?
      draft:
        type: boolean
        description: Is draft?

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2.0.10

      - name: Extract Version
        id: extract_version
        run: |
          VERSION=$(grep -oP 'versionName = "\K[^"]+' app/build.gradle.kts)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          if [ ${{ inputs.beta }} == true ]; then BETA=true; else BETA=false; fi
          echo "beta=$BETA" >> $GITHUB_OUTPUT
          TAG="v$VERSION"
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: Build Signed APK
        run: |
          echo "${{ secrets.keystore }}" | base64 -d > $GITHUB_WORKSPACE/signing-key.jks
          chmod +x ./gradlew
          ./gradlew assembleRelease \
            -Pandroid.injected.signing.store.file=$GITHUB_WORKSPACE/signing-key.jks \
            -Pandroid.injected.signing.store.password=${{ secrets.keystore_password }} \
            -Pandroid.injected.signing.key.alias=${{ secrets.key_alias }} \
            -Pandroid.injected.signing.key.password=${{ secrets.key_password }}

      - name: Find and Rename APK
        run: |
          APK_PATH=$(find . -name "*release*.apk" | head -n 1)
          if [ -z "$APK_PATH" ]; then
            echo "No APK file found"
            exit 1
          fi
          mv "$APK_PATH" ./Manager.apk
          echo "APK renamed to Manager.apk"

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create "${{ steps.extract_version.outputs.tag }}" \
            --title "${{ steps.extract_version.outputs.version }}" \
            --generate-notes \
            --prerelease ${{ steps.extract_version.outputs.beta }} \
            --draft ${{ github.event.inputs.draft }} \
            ./Manager.apk
